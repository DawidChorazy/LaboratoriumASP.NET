
@model WebApp.Controllers.PagingListAsync<WebApp.Models.Olympics.PersonViewModel>


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    CancellationToken token = CancellationToken.None;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.Height)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.Weight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.BronzeMedals)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.SilverMedals)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.GoldMedals)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetAsyncEnumerator(token).Current.EventCount)
        </th>
        
    </tr>
    </thead>
    <tbody>
    @await foreach (var item in Model.Data) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Height)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BronzeMedals)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SilverMedals)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GoldMedals)
            </td>
            <td>
                <a asp-action="Events" asp-route-id="@item.Id">
                    @item.EventCount
                </a>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav aria-label="People page navigation">
    <ul class="pagination">
        @if (Model.IsPrevious)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-controller="Olympics"
                   asp-action="Index"
                   asp-route-page="@(Model.Page - 1)"
                   asp-route-size="@Model.Size">
                    Poprzednia
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">Poprzednia</a>
            </li>
        }

        <li class="page-item disabled">
            <a class="page-link">@Model.Page</a>
        </li>

        @if (Model.IsNext)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-controller="Olympics"
                   asp-action="Index"
                   asp-route-page="@(Model.Page + 1)"
                   asp-route-size="@Model.Size">
                    Następna
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">Następna</a>
            </li>
        }
    </ul>
</nav>
